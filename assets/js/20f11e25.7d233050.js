"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[449],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>y});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),m=a,y=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return t?r.createElement(y,o(o({ref:n},u),{},{components:t})):r.createElement(y,o({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4035:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={sidebar_position:31},o="Blueprints",s={unversionedId:"blueprints",id:"blueprints",title:"Blueprints",description:"Configuration (.tcs.yaml)",source:"@site/docs/blueprints.md",sourceDirName:".",slug:"/blueprints",permalink:"/docs/blueprints",draft:!1,editUrl:"https://github.com/thecloudsphere/documentation/tree/main/docs/blueprints.md",tags:[],version:"current",sidebarPosition:31,frontMatter:{sidebar_position:31},sidebar:"tutorialSidebar",previous:{title:"Environments",permalink:"/docs/environments"},next:{title:"Templates",permalink:"/docs/templates"}},l={},p=[{value:"Configuration (.tcs.yaml)",id:"configuration-tcsyaml",level:2},{value:"General information",id:"general-information",level:3},{value:"Environment",id:"environment",level:3},{value:"Control",id:"control",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Outputs",id:"outputs",level:3}],u={toc:p};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"blueprints"},"Blueprints"),(0,a.kt)("h2",{id:"configuration-tcsyaml"},"Configuration (.tcs.yaml)"),(0,a.kt)("h3",{id:"general-information"},"General information"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'author: Christian Berendt\nrepository_server: https://github.com\nrepository: thecloudsphere/registry\nname: ansible/openstack/hello-world\nversions:\n  - version: main\ndescription: |\n  Start a single instance on an OpenStack environment\nschedule: "*/15 * * * *"\n')),(0,a.kt)("h3",{id:"environment"},"Environment"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"environment:\n  repository: thecloudsphere/registry\n  name: ansible/base\n  version: 7.1.0\n")),(0,a.kt)("h3",{id:"control"},"Control"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'control:\n  type: ssh\n  arguments:\n    - name: destination\n      value: "{{ outputs.address }}"\n      type: string\n    - name: identity_file\n      value: "{{ outputs.private_key }}"\n      type: file\n    - name: user\n      value: ubuntu\n      type: string\n')),(0,a.kt)("h3",{id:"inputs"},"Inputs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"inputs:\n  - name: clouds.yaml\n    destination:\n      path: clouds.yaml\n      type: file\n    required: true\n    description: |\n      clouds.yaml is a configuration file that contains everything needed to connect\n      to one or more clouds. It may contain private information and is generally\n      considered private to a user.\n    visibility: private\n\n  - name: cloud name\n    destination:\n      path: ANSIBLE_VAR_provider_cloud\n      type: environment\n    default: openstack\n    required: false\n    description: |\n      Entry from the clouds.yaml to be used.\n")),(0,a.kt)("h3",{id:"outputs"},"Outputs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"outputs:\n  - name: private_key\n    source:\n      path: private_key\n      type: ssh\n    description: |\n      Private SSH key to access the instance\n    visibility: private\n\n  - name: address\n    source:\n      path: address\n      type: ipv4address\n    description: |\n      IP address to access the instance\n")))}c.isMDXComponent=!0}}]);