"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[486],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=p(t),v=i,d=u["".concat(c,".").concat(v)]||u[v]||m[v]||o;return t?r.createElement(d,s(s({ref:n},l),{},{components:t})):r.createElement(d,s({ref:n},l))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=v;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a[u]="string"==typeof e?e:i,s[1]=a;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},7469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:30},s="Environments",a={unversionedId:"environments",id:"environments",title:"Environments",description:"Containerfile",source:"@site/docs/environments.md",sourceDirName:".",slug:"/environments",permalink:"/docs/environments",draft:!1,editUrl:"https://github.com/thecloudsphere/documentation/tree/main/docs/environments.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/getting-started"},next:{title:"Configuration",permalink:"/docs/configuration"}},c={},p=[{value:"Containerfile",id:"containerfile",level:2},{value:"run.sh",id:"runsh",level:2},{value:"Makefile",id:"makefile",level:2},{value:".tcs.yaml",id:"tcsyaml",level:2}],l={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"environments"},"Environments"),(0,i.kt)("h2",{id:"containerfile"},"Containerfile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'ARG UBUNTU_VERSION=22.04\nFROM ubuntu:${UBUNTU_VERSION}\n\nENV DEBIAN_FRONTEND=noninteractive\nSHELL ["/bin/bash", "-o", "pipefail", "-c"]\n\nCOPY files/run.sh /environment/run.sh\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        dumb-init \\\n        git \\\n        make \\\n        openssh-client \\\n        rsync \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p /blueprint /input /output /processing /export /cache /environment\n\nWORKDIR /environment\n\nVOLUME /blueprint /input /output /processing /export /cache\n\nENTRYPOINT ["/usr/bin/dumb-init", "--"]\n')),(0,i.kt)("h2",{id:"runsh"},"run.sh"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'#!/usr/bin/env bash\n\nif [[ ! -e /blueprint/.git ]]; then\n    if [[ -e /input/id_rsa.git ]]; then\n    GIT_SSH_COMMAND=\'ssh -i /input/id_rsa.git -oStrictHostKeyChecking=no\' git clone -b ${BLUEPRINT_VERSION} ${BLUEPRINT_SOURCE} /blueprint\n    else\n        git clone -b ${BLUEPRINT_VERSION} ${BLUEPRINT_SOURCE} /blueprint\n    fi\nfi\n\nif [[ ! -e /environment/blueprint.env ]]; then\n    echo "export BLUEPRINT=${BLUEPRINT_NAME}" >> /environment/blueprint.env\n    echo "export BLUEPRINT_PATH=${BLUEPRINT_PATH}" >> /environment/blueprint.env\nfi\n\nsource /environment/blueprint.env\n\npushd /environment > /dev/null\nmake "$@"\npopd > /dev/null\n')),(0,i.kt)("h2",{id:"makefile"},"Makefile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"import:\n    @cp /environment/ansible.cfg /processing\n    @cp -r /environment/inventory /processing\n    @cp -r /environment/.ansible /processing\n    @cp /environment/requirements.yml /processing\n    @rsync -av /blueprint/$(BLUEPRINT_PATH)/ /processing/\n    @rsync -av /export/ /processing/\n    @rsync -av /input/ /processing/\n\ninit:\n    @echo NOT IMPLEMENTED\n\nvalidate:\n    @echo NOT IMPLEMENTED\n\ncheck:\n    @echo NOT IMPLEMENTED\n\ncreate:\n    @echo NOT IMPLEMENTED\n\nreconcile:\n    @echo NOT IMPLEMENTED\n\ndestroy:\n    @echo NOT IMPLEMENTED\n\nrefresh:\n    @echo NOT IMPLEMENTED\n\nstatus:\n    @echo NOT IMPLEMENTED\n\nexport:\n    @cp -r /processing/* /export\n\nPHONY: import init validate prepare create reconcile destroy refresh status export\n")),(0,i.kt)("h2",{id:"tcsyaml"},".tcs.yaml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"---\nenvironment:\n  author: Christian Berendt\n  repository_server: https://github.com\n  repository: thecloudsphere/registry\n  name: base\n  image: harbor.services.osism.tech/thecloudsphere/base\n  command: /environment/run.sh\n  versions:\n    - version: latest\n  description: Base environment\n  inputs: []\n  outputs: []\n")))}u.isMDXComponent=!0}}]);