"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[372],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>v});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,v=c["".concat(u,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(v,a(a({ref:t},s),{},{components:n})):r.createElement(v,a({ref:t},s))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6777:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1},a="Overview",l={unversionedId:"overview",id:"overview",title:"Overview",description:"The Cloudsphere efficiently manages your cloud infrastructures \ud83d\ude80",source:"@site/docs/overview.md",sourceDirName:".",slug:"/overview",permalink:"/docs/overview",draft:!1,editUrl:"https://github.com/thecloudsphere/documentation/tree/main/docs/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Architecture",permalink:"/docs/architecture"}},u={},p=[{value:"Terminology",id:"terminology",level:2},{value:"Environment",id:"environment",level:3},{value:"Blueprint",id:"blueprint",level:3},{value:"Deployment",id:"deployment",level:3},{value:"Input",id:"input",level:3},{value:"Log",id:"log",level:3},{value:"Transitions",id:"transitions",level:2}],s={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The Cloudsphere efficiently manages your cloud infrastructures \ud83d\ude80"),(0,o.kt)("p",null,"Automate infrastructure as code (IaC) provisioning at any scale,\nat any cloud or data center with any tool. Through a single central\nAPI. Freely definable cloud infrastructures at the push of a button\nas self-service."),(0,o.kt)("h2",{id:"terminology"},"Terminology"),(0,o.kt)("mermaid",{value:"graph TD\n    Enviornment --\x3e Deploymenttemplate\n    Blueprint --\x3e Deploymenttemplate\n    Input_1 --\x3e Deploymenttemplate\n    Input_2 --\x3e Deploymenttemplate\n    Deploymenttemplate --\x3e Deployment\n    Deployment --\x3e State\n    Deployment --\x3e Output_1\n    Deployment --\x3e Output_2\n    Deployment --\x3e Log_1\n    Deployment --\x3e Log_2"}),(0,o.kt)("h3",{id:"environment"},"Environment"),(0,o.kt)("p",null,"An environment contains all the necessary runtime components to\nexecute Infrastructure as Code contained in a Blueprint."),(0,o.kt)("h3",{id:"blueprint"},"Blueprint"),(0,o.kt)("p",null,"A Blueprint contains everything needed to create a cloud infrastructure\nin the form of Infrastructure as Code."),(0,o.kt)("h3",{id:"deployment"},"Deployment"),(0,o.kt)("p",null,"A deployment executes an environment in a blueprint with a given\nparameterization (template)."),(0,o.kt)("h3",{id:"input"},"Input"),(0,o.kt)("p",null,"Both blueprints and deployments can be passed any inputs at runtime.\nThese inputs are assembled in shells and then assigned."),(0,o.kt)("h3",{id:"log"},"Log"),(0,o.kt)("p",null,"Individual executions generate logs. For example, a deployment or a reconcilation.\nThe generated STDOUT and STDERR as well as the exit code are stored in the database."),(0,o.kt)("h2",{id:"transitions"},"Transitions"),(0,o.kt)("mermaid",{value:"graph TD\n    START --\x3e CREATE\n    START --\x3e RECONCILE\n    START --\x3e DESTROY\n\n    CREATE --\x3e Start_Runtime_Environment\n    DESTROY --\x3e Import_State\n    RECONCILE --\x3e Import_State\n    Import_State --\x3e Start_Runtime_Environment\n\n    Start_Runtime_Environment --\x3e Prepare_Blueprint\n    Prepare_Blueprint --\x3e Validate_Blueprint\n    Validate_Blueprint --\x3e Initialize_Runtime_Environment\n    Initialize_Runtime_Environment --\x3e Run_Deployment\n    Run_Deployment --\x3e Export_State\n    Run_Deployment --\x3e Get_Outputs\n    Run_Deployment --\x3e Write_Logs\n\n    Export_State --\x3e END\n    Get_Outputs --\x3e END\n    Write_Logs --\x3e END"}))}c.isMDXComponent=!0}}]);