"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[486],{4031:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var t=i(4848),s=i(8453);const r={sidebar_position:30},o="Environments",l={id:"environments",title:"Environments",description:"An environment is a container image that provides defined tools, volumes and",source:"@site/docs/environments.md",sourceDirName:".",slug:"/environments",permalink:"/docs/environments",draft:!1,unlisted:!1,editUrl:"https://github.com/thecloudsphere/documentation/tree/main/docs/environments.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Inputs & Outputs",permalink:"/docs/inputs-outputs"},next:{title:"Blueprints",permalink:"/docs/blueprints"}},c={},a=[{value:"Configuration",id:"configuration",level:2},{value:"General information",id:"general-information",level:3},{value:"Inputs &amp; Outputs",id:"inputs--outputs",level:3},{value:"Samples",id:"samples",level:2},{value:"Base",id:"base",level:3},{value:"Containerfile",id:"containerfile",level:4},{value:"run.sh",id:"runsh",level:4},{value:"Makefile",id:"makefile",level:4},{value:".tcs.yaml",id:"tcsyaml",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"environments",children:"Environments"})}),"\n",(0,t.jsx)(n.p,{children:"An environment is a container image that provides defined tools, volumes and\nscripts."}),"\n",(0,t.jsx)(n.p,{children:"The following tools must always be usable in an environment:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"dumb-init"}),"\n",(0,t.jsx)(n.li,{children:"git"}),"\n",(0,t.jsx)(n.li,{children:"make"}),"\n",(0,t.jsx)(n.li,{children:"openssh-client"}),"\n",(0,t.jsx)(n.li,{children:"rsync"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The following volumes must always be defined in an environment:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/blueprint"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/cache"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/export"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/input"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/output"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"/processing"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The entry point into an environment is always a ",(0,t.jsx)(n.code,{children:"/run.sh"})," script. This performs\npreparations (e.g. retrieving the blueprint) and then executes a processing script\nto which all arguments are passed. In the ",(0,t.jsx)(n.code,{children:"base"}),"environment, ",(0,t.jsx)(n.code,{children:"make"})," and a\n",(0,t.jsx)(n.code,{children:"Makefile"})," are used for this."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Makefile"})," has defined targets with which the actions are executed. If no\n",(0,t.jsx)(n.code,{children:"Makefile"})," is used for processing, then the first argument must be used. For example,\nif the entry point is a script ",(0,t.jsx)(n.code,{children:"/entrypoint.sh"})," then the call ",(0,t.jsx)(n.code,{children:"/entrypoint.sh create"}),"\nmust start the action to create a deployment."]}),"\n",(0,t.jsx)(n.p,{children:"The following actions must be available:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"check"}),"\n",(0,t.jsx)(n.li,{children:"create"}),"\n",(0,t.jsx)(n.li,{children:"destroy"}),"\n",(0,t.jsx)(n.li,{children:"export"}),"\n",(0,t.jsx)(n.li,{children:"import"}),"\n",(0,t.jsx)(n.li,{children:"init"}),"\n",(0,t.jsx)(n.li,{children:"reconcile"}),"\n",(0,t.jsx)(n.li,{children:"refresh"}),"\n",(0,t.jsx)(n.li,{children:"status"}),"\n",(0,t.jsx)(n.li,{children:"validate"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"general-information",children:"General information"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"---\nenvironment:\n  author: Christian Berendt\n  repository_server: https://github.com\n  repository: thecloudsphere/registry\n  name: base\n  image: harbor.services.osism.tech/thecloudsphere/base\n  command: /environment/run.sh\n  versions:\n    - version: latest\n  description: Base environment\n"})}),"\n",(0,t.jsx)(n.h3,{id:"inputs--outputs",children:"Inputs & Outputs"}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"inputs-outputs",children:"Inputs & Outputs"})," for details."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"inputs: []\noutputs: []\n"})}),"\n",(0,t.jsx)(n.h2,{id:"samples",children:"Samples"}),"\n",(0,t.jsx)(n.h3,{id:"base",children:"Base"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"base"})," environment is a minimal environment that can be used as a basis for\ncreating useful environments. The container image can be found at\n",(0,t.jsx)(n.a,{href:"https://github.com/thecloudsphere/registry/tree/main/environments/base",children:"thecloudsphere/registry/environments/base"}),"\nand is published on our container image registry\n(",(0,t.jsx)(n.code,{children:"harbor.services.osism.tech/thecloudsphere/base:latest"}),")."]}),"\n",(0,t.jsx)(n.h4,{id:"containerfile",children:"Containerfile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'ARG UBUNTU_VERSION=22.04\nFROM ubuntu:${UBUNTU_VERSION}\n\nENV DEBIAN_FRONTEND=noninteractive\nSHELL ["/bin/bash", "-o", "pipefail", "-c"]\n\nCOPY files/Makefile /environment/Makefile\nCOPY files/run.sh /environment/run.sh\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        dumb-init \\\n        git \\\n        make \\\n        openssh-client \\\n        rsync \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p /blueprint /input /output /processing /export /cache /environment\n\nWORKDIR /environment\n\nVOLUME /blueprint /input /output /processing /export /cache\n\nENTRYPOINT ["/usr/bin/dumb-init", "--"]\n'})}),"\n",(0,t.jsx)(n.h4,{id:"runsh",children:"run.sh"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'#!/usr/bin/env bash\n\nif [[ ! -e /blueprint/.git ]]; then\n    if [[ -e /input/id_rsa.git ]]; then\n\tGIT_SSH_COMMAND=\'ssh -i /input/id_rsa.git -oStrictHostKeyChecking=no\' git clone -b ${BLUEPRINT_VERSION} ${BLUEPRINT_SOURCE} /blueprint\n    else\n        git clone -b ${BLUEPRINT_VERSION} ${BLUEPRINT_SOURCE} /blueprint\n    fi\nfi\n\nif [[ ! -e /environment/blueprint.env ]]; then\n    echo "export BLUEPRINT=${BLUEPRINT_NAME}" >> /environment/blueprint.env\n    echo "export BLUEPRINT_PATH=${BLUEPRINT_PATH}" >> /environment/blueprint.env\nfi\n\nsource /environment/blueprint.env\n\npushd /environment > /dev/null\nmake "$@"\npopd > /dev/null\n'})}),"\n",(0,t.jsx)(n.h4,{id:"makefile",children:"Makefile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"import:\n\t@rsync -av /blueprint/$(BLUEPRINT_PATH)/ /processing/\n\t@rsync -av /export/ /processing/\n\t@rsync -av /input/ /processing/\n\ninit:\n\t@echo NOT IMPLEMENTED\n\nvalidate:\n\t@echo NOT IMPLEMENTED\n\ncheck:\n\t@echo NOT IMPLEMENTED\n\ncreate:\n\t@echo NOT IMPLEMENTED\n\nreconcile:\n\t@echo NOT IMPLEMENTED\n\ndestroy:\n\t@echo NOT IMPLEMENTED\n\nrefresh:\n\t@echo NOT IMPLEMENTED\n\nstatus:\n\t@echo NOT IMPLEMENTED\n\nexport:\n\t@cp -r /processing/* /export\n\nPHONY: import init validate prepare create reconcile destroy refresh status export\n"})}),"\n",(0,t.jsx)(n.h4,{id:"tcsyaml",children:".tcs.yaml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"---\nenvironment:\n  author: Christian Berendt\n  repository_server: https://github.com\n  repository: thecloudsphere/registry\n  name: base\n  image: harbor.services.osism.tech/thecloudsphere/base\n  command: /environment/run.sh\n  versions:\n    - version: latest\n  description: Base environment\n  inputs: []\n  outputs: []\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);