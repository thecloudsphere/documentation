"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[821],{6789:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=n(4848),o=n(8453);const r={sidebar_position:101},a="Roadmap",s={id:"roadmap",title:"Roadmap",description:"Blueprint: Update schedule",source:"@site/docs/roadmap.md",sourceDirName:".",slug:"/roadmap",permalink:"/docs/roadmap",draft:!1,unlisted:!1,editUrl:"https://github.com/thecloudsphere/documentation/tree/main/docs/roadmap.md",tags:[],version:"current",sidebarPosition:101,frontMatter:{sidebar_position:101},sidebar:"tutorialSidebar",previous:{title:"Release notes",permalink:"/docs/release-notes"},next:{title:"Appendix",permalink:"/docs/appendix"}},d={},c=[{value:"Blueprint: Update schedule",id:"blueprint-update-schedule",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"roadmap",children:"Roadmap"})}),"\n",(0,i.jsx)(t.h2,{id:"blueprint-update-schedule",children:"Blueprint: Update schedule"}),"\n",(0,i.jsxs)(t.p,{children:["The reconciliation process, configurable via the ",(0,i.jsx)(t.code,{children:"reconcile_schedule"})," argument\nof a blueprint, ensures that a deployment is in the right state. However, this\ndoes not take into account changes to the blueprint itself."]}),"\n",(0,i.jsxs)(t.p,{children:["Via ",(0,i.jsx)(t.code,{children:"update_schedule"})," it is now possible to check for changes to a blueprint or\nthe availability of a new version."]}),"\n",(0,i.jsx)(t.p,{children:"When changes are identified, the new version is updated if necessary, depending\non the configuration of the template, and changes are applied by performing a\nreconciliation."})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(6540);const o={},r=i.createContext(o);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);