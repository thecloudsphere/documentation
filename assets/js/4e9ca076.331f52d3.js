"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[446],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),d=l,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:l,a[1]=i;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9837:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),l=(n(7294),n(3905));const o={sidebar_position:32},a="Templates",i={unversionedId:"templates",id:"templates",title:"Templates",description:"Configuration",source:"@site/docs/templates.md",sourceDirName:".",slug:"/templates",permalink:"/docs/templates",draft:!1,editUrl:"https://github.com/thecloudsphere/documentation/tree/main/docs/templates.md",tags:[],version:"current",sidebarPosition:32,frontMatter:{sidebar_position:32},sidebar:"tutorialSidebar",previous:{title:"Blueprints",permalink:"/docs/blueprints"},next:{title:"Flows",permalink:"/docs/flows"}},p={},s=[{value:"Configuration",id:"configuration",level:2},{value:"Environment",id:"environment",level:3},{value:"Blueprint",id:"blueprint",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Ansible",id:"ansible",level:2},{value:"Terraform",id:"terraform",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"templates"},"Templates"),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("h3",{id:"environment"},"Environment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"environment:\n  name: terraform/openstack\n  repository: thecloudsphere/registry\n  repository_server: https://github.com\n")),(0,l.kt)("h3",{id:"blueprint"},"Blueprint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"blueprint:\n  name: terraform/openstack/hello-world\n  repository: thecloudsphere/registry\n  repository_server: https://github.com\nblueprint_version: main\n")),(0,l.kt)("h3",{id:"inputs"},"Inputs"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"inputs-outputs"},"Inputs & Outputs")," for details."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'inputs:\n  clouds.yaml:\n    type: file\n    path: clouds.yaml\n  "cloud name": openstack\n  flavor: "SCS-1V:1:10"\n  prefix: "{{ tcs.name }}"\n  "public network": public\n')),(0,l.kt)("h1",{id:"samples"},"Samples"),(0,l.kt)("h2",{id:"ansible"},"Ansible"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nansible-hello-world:\n  environment: ansible/base\n  blueprint: ansible/openstack/hello-world\n  blueprint_version: main\n  inputs:\n    clouds.yaml:\n      type: file\n      path: clouds.yaml\n    "cloud name": openstack\n    flavor: "SCS-1V:1:10"\n    prefix: "{{ tcs.name }}"\n    "public network": public\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"tcsctl environment import ansible/base\ntcsctl blueprint import ansible/openstack/hello-world\ntcsctl template import hello-world.yaml ansible-hello-world\ntcsctl deployment create ansible ansible-hello-world\n")),(0,l.kt)("h2",{id:"terraform"},"Terraform"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'terraform-hello-world:\n  environment:\n    name: terraform/openstack\n    repository: thecloudsphere/registry\n    repository_server: https://github.com\n  blueprint:\n    name: terraform/openstack/hello-world\n    repository: thecloudsphere/registry\n    repository_server: https://github.com\n  blueprint_version: main\n  inputs:\n    clouds.yaml:\n      type: file\n      path: clouds.yaml\n    "cloud name": openstack\n    flavor: "SCS-1V:1:10"\n    prefix: "{{ tcs.name }}"\n    "public network": public\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"tcsctl template import hello-world.yaml terraform-hello-world\ntcsctl deployment create terraform terraform-hello-world\n")))}m.isMDXComponent=!0}}]);