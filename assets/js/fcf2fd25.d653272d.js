"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[943],{9094:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=t(4848),s=t(8453);const r={sidebar_position:25},d="Inputs & Outputs",o={id:"inputs-outputs",title:"Inputs & Outputs",description:"Inputs and outputs can be defined for environments and blueprints to enable inputs",source:"@site/docs/inputs-outputs.md",sourceDirName:".",slug:"/inputs-outputs",permalink:"/docs/inputs-outputs",draft:!1,unlisted:!1,editUrl:"https://github.com/thecloudsphere/documentation/tree/main/docs/inputs-outputs.md",tags:[],version:"current",sidebarPosition:25,frontMatter:{sidebar_position:25},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/getting-started"},next:{title:"Environments",permalink:"/docs/environments"}},a={},l=[{value:"Inputs",id:"inputs",level:2},{value:"Types",id:"types",level:3},{value:"Environment",id:"environment",level:4},{value:"File",id:"file",level:4},{value:"Outputs",id:"outputs",level:2},{value:"Types",id:"types-1",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"inputs--outputs",children:"Inputs & Outputs"}),"\n",(0,i.jsx)(n.p,{children:"Inputs and outputs can be defined for environments and blueprints to enable inputs\nand outputs."}),"\n",(0,i.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,i.jsxs)(n.p,{children:["An input makes contents available via files or environment variables. All currently usable\ntypes are listed under ",(0,i.jsx)(n.a,{href:"#types",children:"Types"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It is possible to define the visibility of the input via the optional ",(0,i.jsx)(n.code,{children:"visibility"}),"\nargument. Possible values are ",(0,i.jsx)(n.code,{children:"public"})," and ",(0,i.jsx)(n.code,{children:"private"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"required"})," argument can be used to specify whether an input is mandatory or not.\nPossible values are ",(0,i.jsx)(n.code,{children:"true"})," and ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If an input is not required, an optional default value can be set with the ",(0,i.jsx)(n.code,{children:"default"}),"\nargument. This will be used if no input is given."]}),"\n",(0,i.jsx)(n.p,{children:"If an input is not required and no default has been set and the input is not passed,\nthe corresponding file or environment variable is not created."}),"\n",(0,i.jsxs)(n.p,{children:["The input can be described via ",(0,i.jsx)(n.code,{children:"description"}),". This argument is not optional. A description\nmust be given for each input. Markdown can be used to format the descriptions in the UI."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"  - name: clouds.yaml\n    destination:\n      path: clouds.yaml\n      type: file\n    required: true\n    description: |\n      clouds.yaml is a configuration file that contains everything needed to connect\n      to one or more clouds. It may contain private information and is generally\n      considered private to a user.\n    visibility: private\n"})}),"\n",(0,i.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,i.jsx)(n.h4,{id:"environment",children:"Environment"}),"\n",(0,i.jsxs)(n.p,{children:["Input is provided via an environment variable. The value set for ",(0,i.jsx)(n.code,{children:"path"})," is used for the\nname of the environment variable."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: cloud name\n  destination:\n    path: ANSIBLE_VAR_provider_cloud\n    type: environment\n  default: openstack\n  required: false\n  description: |\n    Entry from the clouds.yaml to be used.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The input is available in the environment variable ",(0,i.jsx)(n.code,{children:"ANSIBLE_VAR_provider_cloud"})," in the\ndeployment."]}),"\n",(0,i.jsx)(n.h4,{id:"file",children:"File"}),"\n",(0,i.jsxs)(n.p,{children:["Write an input to a file on the ",(0,i.jsx)(n.code,{children:"/input"})," volume. The ",(0,i.jsx)(n.code,{children:"path"})," argument is always\nrelative to ",(0,i.jsx)(n.code,{children:"/input"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: clouds.yaml\n  destination:\n    path: clouds.yaml\n    type: file\n  required: true\n  description: |\n    clouds.yaml is a configuration file that contains everything needed to connect\n    to one or more clouds. It may contain private information and is generally\n    considered private to a user.\n  visibility: private\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The input is available in the file ",(0,i.jsx)(n.code,{children:"/inputs/clouds.yaml"})," in the\ndeployment. From there it is copied to ",(0,i.jsx)(n.code,{children:"/processing"})," when the deployment is initialised."]}),"\n",(0,i.jsx)(n.h2,{id:"outputs",children:"Outputs"}),"\n",(0,i.jsxs)(n.p,{children:["An output makes contents of files in the ",(0,i.jsx)(n.code,{children:"/output"})," volume accessible after execution\nof a deployment. In order for defined outputs to be usable, the corresponding file must\nbe created by the deployment beforehand."]}),"\n",(0,i.jsxs)(n.p,{children:["Here is an example of an Ansible based deployment that writes a public IP address to the\n",(0,i.jsx)(n.code,{children:"/output"})," volume in the file ",(0,i.jsx)(n.code,{children:"address"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- name: Write floating ip address to /output/address\n  ansible.builtin.copy:\n    dest: /output/address\n    content: \"{{ result.openstack_servers[0].public_v4 }}\"\n  when: state == 'present'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The content of the ",(0,i.jsx)(n.code,{children:"address"})," file can now be read out and made available via an output.\nThe ",(0,i.jsx)(n.code,{children:"path"})," argument is always relative to ",(0,i.jsx)(n.code,{children:"/output"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It is possible to define the visibility of the output via the optional ",(0,i.jsx)(n.code,{children:"visibility"}),"\nargument. Possible values are ",(0,i.jsx)(n.code,{children:"public"})," and ",(0,i.jsx)(n.code,{children:"private"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The expected content can be specified for the source via the optional ",(0,i.jsx)(n.code,{children:"type"})," argument.\nBefore the output is made available, it is checked whether it is an IPv4 address, for example.\nAll currently usable types are listed under ",(0,i.jsx)(n.a,{href:"#types",children:"Types"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The output can be described via ",(0,i.jsx)(n.code,{children:"description"}),". This argument is not optional. A description\nmust be given for each output. Markdown can be used to format the descriptions in the UI."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"outputs:\n  - name: address\n    source:\n      path: address\n      type: ipv4address\n    description: |\n      IP address to access the instance\n    visibility: public\n"})}),"\n",(0,i.jsx)(n.h3,{id:"types-1",children:"Types"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ipv4address"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"IPv4 address"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"ssh"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Private SSH key"})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);